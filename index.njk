
<div id="result"></div>
<button id="button" disabled>Check</button>


<form>
  <div style="display:flex">
  <input type="checkbox" id="checkbox1" name="checkbox1" value="1">
  <label for="checkbox1">1</label><br>
  <input type="checkbox" id="checkbox2" name="checkbox2" value="2">
  <label for="checkbox2">2</label><br>
  <input type="checkbox" id="checkbox3" name="checkbox3" value="3">
  <label for="checkbox3">3</label><br>
  <input type="checkbox" id="checkbox4" name="checkbox4" value="4">
  <label for="checkbox4">4</label><br>
  <input type="checkbox" id="checkbox5" name="checkbox5" value="5">
  <label for="checkbox5">5</label><br>
</div>

<div style="display:flex">
  <input type="checkbox" id="checkbox6" name="checkbox1" value="6">
  <label for="checkbox6">6</label><br>
  <input type="checkbox" id="checkbox7" name="checkbox2" value="7">
  <label for="checkbox7">7</label><br>
  <input type="checkbox" id="checkbox8" name="checkbox3" value="8">
  <label for="checkbox8">8</label><br>
  <input type="checkbox" id="checkbox9" name="checkbox4" value="9">
  <label for="checkbox9">9</label><br>
  <input type="checkbox" id="checkbox10" name="checkbox5" value="10">
  <label for="checkbox10">10</label><br>
</div>
</form> 



<style>
  input[type="checkbox"] {
  display: none;
}

label {
  display: block;
  width: 100px;
  height: 150px;
  background-color: #cccccc;
  margin:3px;
}

label:before {
  content: "";
}
input[type="checkbox"]:checked + label {
  background-color: #00ff00;
}

input[type="checkbox"]:disabled + label {
  background-color: black;
}


@keyframes shake {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-10px);
  }
  50% {
    transform: translateX(10px);
  }
  75% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(0);
  }
}

.shake {
  animation: shake 0.5s;
}

</style>

<script>
function updateCheckboxes() {
 function updateCheckboxes() {
  // Get the checkbox and label elements
  const checkbox = this;
  const label = document.querySelector(`label[for="${checkbox.id}"]`);

  // Count the number of checked checkboxes
  const checkedCount = document.querySelectorAll('input[type="checkbox"]:checked').length;

  // If the checkbox is not disabled and there are 5 checked boxes, disable all unchecked boxes, add the shake class to the label, and remove the shake class from all other labels
  if (!checkbox.disabled && checkedCount === 5) {
    const uncheckedBoxes = document.querySelectorAll('input[type="checkbox"]:not(:checked)');
    uncheckedBoxes.forEach(box => {
      box.disabled = true;
    });
    label.classList.add('shake');
    const uncheckedLabels = document.querySelectorAll('input[type="checkbox"]:not(:checked) + label');
    uncheckedLabels.forEach(uncheckedLabel => {
      uncheckedLabel.classList.remove('shake');
    });
  }
  // If the checkbox is not disabled and there are less than 5 checked boxes, remove the shake class from the label
  else if (!checkbox.disabled && label.classList.contains('shake')) {
    label.classList.remove('shake');
  }
  // If the checkbox is disabled and there are less than 5 checked boxes, enable the checkbox and remove the shake class from the label
  else if (checkbox.disabled && checkedCount < 5) {
    checkbox.disabled = false;
    label.classList.remove('shake');
  }
  // If the checkbox is disabled and there are already 5 checked boxes, add the shake class to the label
  else if (checkbox.disabled && checkedCount === 5) {
    label.classList.add('shake');
  }
}

const checkboxElements = document.querySelectorAll('input[type="checkbox"]');
checkboxElements.forEach(checkbox => {
  checkbox.addEventListener('change', updateCheckboxes);
});




//-------

const button = document.getElementById('button');
const checkboxes = Array.from(document.querySelectorAll('input[type="checkbox"]'));

// Add an event listener to each checkbox to enable/disable the button
  checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', () => {
      // Count the number of checked checkboxes
      const checkedCount = checkboxes.reduce((count, cb) => cb.checked ? count + 1 : count, 0);

      // Enable the button if exactly 5 checkboxes are checked, otherwise disable it
      if (checkedCount === 5) {
        button.disabled = false;
      } else {
        button.disabled = true;
      }
    });
  });


button.addEventListener('click', () => {
  // Get the checkboxes
  const checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');

  // Convert the NodeList of checkboxes to an array
  const values = Array.from(checkboxes).map(checkbox => checkbox.value);

  // Build the URL string with the values
  const url = `/.netlify/functions/lookupcards?values=${values.join(',')}`;

  // Make a GET request to the function
  fetch(url)
    .then(response => response.json())
    .then(data => {
      // Get the 'result' element
      const result = document.getElementById('result');

      // Set the HTML content of the 'result' element to the response data
      result.innerHTML = data.allvalues;
    })
    .catch(error => {
      // Log the error message
      console.error(error);
    });
});

</script>